---
jpsType: install
jpsVersion: '1.1'
id: wordpress-custom
name: Wordpress For Dev
categories:
  - apps/blogs
  - apps/content-management
logo: https://gitlab.com/templates-1/wordpress-jelastic/raw/master/images/wp.png
homepage: http://wordpress.org/
description: WordPress is web software you can use to create a beautiful website or blog. We like to say that WordPress is both free and priceless at the same time.
baseUrl: https://gitlab.com/templates-1/wordpress-jelastic/raw/master/wordpress

globals:
  DB_USER: site
  DB_PASS: abcABC123
  LOG: /tmp/git.log

settings:
    fields:
      - "--": "---- Git Credentials ----"

      - name: git_url
        caption: Git Project URL
        type: string
        default: gitlab.com/wordpress-cicd/test-project.git
        required: true
      - name: git_user
        caption: Git User
        type: string
        default: test
        required: true
      - name: git_token
        caption: Git Access Token
        type: string
        inputType: password
        default: n2eXHdPQNh14_fT15357
        required: true
      - name: git_branch
        caption: Git Branch
        type: string
        default: master
        required: true

ssl: false
nodes:
  - nodeType: nginxphp
    count: 1
    cloudlets: 8
    nodeGroup: cp
    links: sqldb:DB
    addons: git-addon
  
  - nodeType: mysql5
    count: 1
    cloudlets: 8
    nodeGroup: sqldb

addons:
  - id: git-addon
    name: Wordpress Git Addon
    buttons:
      - procedure: commitChanges
        caption: Commit Changes
        logsPath: "${globals.LOG}"
        successText: Cachges are successfully commited.
        settings:
          fields:
            - name: git_commit
              caption: Git Message
              type: string
              default: Git Message
              required: true
            
            - name: mode
              caption: Database backup
              type: radio-fieldset
              values:
                db_yes: Yes
                db_no: No
              default: yes

      - procedure: pushChanges
        caption: Push Changes
        logsPath: "${globals.LOG}"
        submitButtonText: Apply
        successText: Cachges are successfully pushed.
    settings:
        fields:
          - name: git_commit
            caption: Git Message
            type: string
            default: Git Message
            required: true
            
          - name: mode
            caption: Database backup
            type: radio-fieldset
            values:
              db_yes: Yes
              db_no: No
            default: yes

onInstall:

  - cmd[sqldb]: |-
      wget https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
      bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "CREATE DATABASE IF NOT EXISTS wordpress;"
    user: root

  - cmd[nginxphp]: curl -fsSL 'https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar' -o /usr/local/bin/wp && chmod +x /usr/local/bin/wp
    user: root

  - gitClone
  - setubDB
  - setupWP

actions:
  gitClone:
    cmd[nginxphp]: |-
      rm -rf /var/www/webroot/ROOT;
      git clone -b ${settings.git_branch} --single-branch https://${settings.git_user}:${settings.git_token}@${settings.git_url} /var/www/webroot/ROOT
  setubDB:
    cmd[nginxphp]: |-
      cat /var/www/webroot/ROOT/wp-content/uploads/revisr-backups/*.sql | mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress 2>&1

  setupWP:
    cmd[nginxphp]: |-
      cp /var/www/webroot/ROOT/wp-config.php.template /var/www/webroot/ROOT/wp-config.php
      cp /var/www/webroot/ROOT/wp-jelastic.php.template /var/www/webroot/ROOT/wp-jelastic.php
      sed -i "s/_HOST_/${env.domain}/g" /var/www/webroot/ROOT/wp-config.php
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress -e "update wp_blogs set domain = '${env.domain}';"  
  reset-content:
    - cmd[nginxphp]: |-
        cd /var/www/webroot/ROOT/
        date &>> ${globals.LOG}
        git fetch &>> ${globals.LOG}
        git reset --hard origin/master &>> ${globals.LOG}
        git pull origin master &>> ${globals.LOG}
        for table in $(ls wp-content/uploads/revisr-backups/ | grep sql); 
          do echo "Table ${table} is reseted"; 
          mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress < wp-content/uploads/revisr-backups/$table; done &>> ${globals.LOG}
        chown nginx:nginx -R /var/www/webroot/ROOT/
