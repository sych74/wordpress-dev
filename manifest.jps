---
jpsType: install
jpsVersion: '1.1'
id: wordpress-dev
name: Wordpress For Dev
categories:
  - apps/blogs
  - apps/content-management
logo: https://gitlab.com/templates-1/wordpress-jelastic/raw/master/images/wp.png
homepage: http://wordpress.org/
description: WordPress is web software you can use to create a beautiful website or blog. We like to say that WordPress is both free and priceless at the same time.
baseUrl: https://raw.githubusercontent.com/sych74/wordpress-dev/master

globals:
  DB_USER: site
  DB_PASS: abcABC123
  LOG: /tmp/git.log
  BACKUP_DIR: /var/www/webroot/ROOT/wp-content/uploads/revisr-backups
  GIT_DIR: /var/www/webroot/ROOT

settings:
  main:  
    fields:
      - name: git_url
        caption: Git Project URL
        type: string
        default: https://gitlab.com/wordpress-cicd/test-project.git
        required: true
      - name: git_user
        caption: Git User
        type: string
        default: test
        required: true
      - name: git_token
        caption: Git Access Token
        type: string
        inputType: password
        default: n2eXHdPQNh14_fT15357
        required: true
      - name: git_branch
        caption: Git Branch
        type: string
        default: master
        required: true
  gitaddon:
    fields:
      - name: git_message
        caption: Git Message
        type: string
        default: Git Message
        required: true
            
      - name: dbbackup
        caption: Database backup
        type: radio-fieldset
        values:
          db_yes: With Database Backup
          db_no: Without Database Backup
        default: With Database Backup
  
ssl: false
nodes:
  - nodeType: nginxphp
    count: 1
    cloudlets: 8
    nodeGroup: cp
    links: sqldb:DB
    addons: git-addon
  
  - nodeType: mysql5
    count: 1
    cloudlets: 8
    nodeGroup: sqldb

addons:
  - id: git-addon
    name: Wordpress Git Addon
    buttons:
      - procedure: commitChanges
        settings: gitaddon
        caption: Commit Changes
        logsPath: "${globals.LOG}"
        successText: Cachges are successfully commited.
      - procedure: pushChanges
        caption: Push Changes
        logsPath: "${globals.LOG}"
        submitButtonText: Apply
        successText: Cachges are successfully pushed.
        
onInstall:

  - cmd[sqldb]: |-
      wget https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
      bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "CREATE DATABASE IF NOT EXISTS wordpress;"
    user: root

  - cmd[nginxphp]: curl -fsSL 'https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar' -o /usr/local/bin/wp && chmod +x /usr/local/bin/wp
    user: root

  - gitClone
  - setubDB
  - setupWP

actions:
  gitClone:
    cmd[nginxphp]: |-
      wget https://raw.githubusercontent.com/sych74/wordpress-dev/master/scripts/cloneSITE.sh -O ~/cloneSITE.sh
      bash ~/cloneSITE.sh ${settings.git_url} ${settings.git_user} ${settings.git_token} ${settings.git_branch}

  setubDB:
    cmd[nginxphp]: |-
      cat ${globals.BACKUP_DIR}/*.sql | mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress 2>&1

  setupWP:
    cmd[nginxphp]: |-
      cp ${globals.GIT_DIR}/wp-config.php.template ${globals.GIT_DIR}/wp-config.php
      cp ${globals.GIT_DIR}/wp-jelastic.php.template ${globals.GIT_DIR}/wp-jelastic.php
      sed -i "s/_HOST_/${env.domain}/g" ${globals.GIT_DIR}/wp-config.php
      wget https://raw.githubusercontent.com/sych74/wordpress-dev/master/scripts/changeDomainON.sh -O ${globals.GIT_DIR}/changeDomainON.sh
      bash ${globals.GIT_DIR}/changeDomainON.sh ${env.protocol}://${env.domain}
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress -e "update wp_blogs set domain = '${env.domain}';"
  reset-content:
    - cmd[nginxphp]: |-
        cd ${globals.GIT_DIR}
        date &>> ${globals.LOG}
        git fetch &>> ${globals.LOG}
        git reset --hard origin/${settings.git_branch} &>> ${globals.LOG}
        git pull origin ${settings.git_branch} &>> ${globals.LOG}
        for table in $(ls ${globals.BACKUP_DIR} | grep sql); 
          do echo "Table ${table} is reseted"; 
          mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 wordpress < ${globals.BACKUP_DIR}/$table; done &>> ${globals.LOG}
        chown nginx:nginx -R ${globals.GIT_DIR}
        
  commitChanges:
    - if ('${settings.dbbackup}' == 'db_yes'):
        cmd[nginxphp]: |-
          for tables in `mysql -u${globals.DB_USER} -p${globals.DB_PASS} -hDB_1 -N -B -e 'show tables from wordpress'`; do \
            echo $tables; mysqldump -u${globals.DB_USER} -p${globals.DB_PASS} wordpress $tables > ${globals.BACKUP_DIR}/revisr_$tables; done
          cd ${globals.GIT_DIR}
          date &>> ${globals.LOG}
          git add .; git commit -am "${settings.git_message} &>> ${globals.LOG}"
        
    - if ('${settings.dbbackup}' == 'db_no'):
         cmd[nginxphp]: |-
          cd ${globals.GIT_DIR}
          date &>> ${globals.LOG}
          git add .; git commit -am "${settings.git_message} &>> ${globals.LOG}"
    
  pushChanges:
    cd ${globals.GIT_DIR}
    date &>> ${globals.LOG}
    git push origin ${settings.git_branch} &>> ${globals.LOG}"
